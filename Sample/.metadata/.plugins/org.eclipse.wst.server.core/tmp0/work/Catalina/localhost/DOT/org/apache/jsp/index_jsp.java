/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.59
 * Generated at: 2015-04-27 04:51:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Spring MVC Tutorial Series by Crunchify.com</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("background-image: url('http://crunchify.com/bg.png');\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\r\n");
      out.write("<script src=\"http://github.highcharts.com/v3.0Beta/highcharts.js\"></script>\r\n");
      out.write("<script src=\"http://github.highcharts.com/v3.0Beta/highcharts-more.js\"></script>\r\n");
      out.write("<script src=\"http://code.highcharts.com/modules/exporting.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link type=\"text/css\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/bootstrap.css\" rel=\"stylesheet\"/>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(function () {\r\n");
      out.write("    $.getJSON('http://www.highcharts.com/samples/data/jsonp.php?filename=range.json&callback=?', function(data) {\r\n");
      out.write("    \r\n");
      out.write("    \t$('#container').highcharts({\r\n");
      out.write("    \t\r\n");
      out.write("\t\t    chart: {\r\n");
      out.write("\t\t        type: 'arearange'\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t        text: 'Temperature variation by day'\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    xAxis: {\r\n");
      out.write("\t\t        type: 'datetime'\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    yAxis: {\r\n");
      out.write("\t\t        title: {\r\n");
      out.write("\t\t            text: null\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    tooltip: {\r\n");
      out.write("\t\t        crosshairs: true,\r\n");
      out.write("\t\t        shared: true,\r\n");
      out.write("\t\t        valueSuffix: '°C'\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    legend: {\r\n");
      out.write("\t\t        enabled: false\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    series: [{\r\n");
      out.write("\t\t        name: 'Temperatures',\r\n");
      out.write("\t\t        data: data,\r\n");
      out.write("\t\t        color: '#FF0000',\r\n");
      out.write("\t\t        negativeColor: '#0088FF'\r\n");
      out.write("\t\t    }]\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $('#container1').highcharts({\r\n");
      out.write("        xAxis: {\r\n");
      out.write("            plotBands: [{ // mark the weekend\r\n");
      out.write("                color: '#FCFFC5',\r\n");
      out.write("                from: Date.UTC(2006, 8, 3, 0, 48, 0),\r\n");
      out.write("                to: Date.UTC(2006, 8, 3, 0, 49, 45)\r\n");
      out.write("            }],\r\n");
      out.write("            tickInterval: 5*1000, // one day\r\n");
      out.write("            type: 'datetime'\r\n");
      out.write("        },\r\n");
      out.write("\r\n");
      out.write("        series: [\r\n");
      out.write("                 {\r\n");
      out.write("            data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4],\r\n");
      out.write("            pointStart: Date.UTC(2006, 8, 3, 0, 48, 45),\r\n");
      out.write("         \r\n");
      out.write("            pointInterval: 5*1000\r\n");
      out.write("        },{\r\n");
      out.write("            data: [39.9, 81.5, 116.4, 139.2, 154.0, 186.0, 145.6, 158.5, 226.4],\r\n");
      out.write("            pointStart: Date.UTC(2006, 8, 3, 0, 48, 45),\r\n");
      out.write("         \r\n");
      out.write("            pointInterval: 5*1000\r\n");
      out.write("        }]\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("   var data=[];\r\n");
      out.write("\r\n");
      out.write("    data.push(\"09/02/2014 15:36:25\",\"33.82, 33.42, 40.83\");\r\n");
      out.write("    data.push(\"08/11/2014 16:25:15\",\"36.6, 33.42, 40.45\");\r\n");
      out.write("    data.push(\"07/30/2014 08:43:57\",\"0.0, 0.0, 0.0\");\r\n");
      out.write("    data.push(\"08/12/2014 22:00:52\",\"77.99, 74.1, 80.12\");\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write(" /*   var data = {\r\n");
      out.write("            \"09/02/2014 15:36:25\": [33.82, 33.42, 40.83],\r\n");
      out.write("                \"08/11/2014 16:25:15\": [36.6, 33.42, 40.45],\r\n");
      out.write("                \"07/30/2014 08:43:57\": [0.0, 0.0, 0.0],\r\n");
      out.write("                \"08/12/2014 22:00:52\": [77.99, 74.1, 80.12],\r\n");
      out.write("                \"08/12/2014 21:19:48\": [56.91, 63.23, 52.42],\r\n");
      out.write("                \"07/23/2014 13:37:46\": [0.0, 0.0, 0.0],\r\n");
      out.write("                \"08/11/2014 17:35:21\": [40.9, 43.83, 38.34]\r\n");
      out.write("        };\r\n");
      out.write("*/\r\n");
      out.write("        var series = [{\r\n");
      out.write("            name: 'some name 1',\r\n");
      out.write("            data: []\r\n");
      out.write("        }, {\r\n");
      out.write("            name: 'some name 2',\r\n");
      out.write("            data: []\r\n");
      out.write("        }, {\r\n");
      out.write("            name: 'some name 3',\r\n");
      out.write("            data: []\r\n");
      out.write("        }],\r\n");
      out.write("            categories = [];\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        for(var category in data) {\r\n");
      out.write("            var points = data[category];\r\n");
      out.write("            alert(points);\r\n");
      out.write("            categories.push(category);\r\n");
      out.write("            for(var i in points) {\r\n");
      out.write("                 series[i].data.push(points[i]);  \r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var i = 7.0;\r\n");
      out.write("        $('#container2').highcharts({\r\n");
      out.write("            title: {\r\n");
      out.write("                text: 'Search Relevancy Graph',\r\n");
      out.write("                x: -20 //center\r\n");
      out.write("            },\r\n");
      out.write("            subtitle: {\r\n");
      out.write("                text: 'Source: WorldClimate.com',\r\n");
      out.write("                x: -20\r\n");
      out.write("            },\r\n");
      out.write("            xAxis: {\r\n");
      out.write("                categories: categories\r\n");
      out.write("            },\r\n");
      out.write("            yAxis: {\r\n");
      out.write("                title: {\r\n");
      out.write("                    text: 'Temperature (°C)'\r\n");
      out.write("                },\r\n");
      out.write("                plotLines: [{\r\n");
      out.write("                    value: 0,\r\n");
      out.write("                    width: 1,\r\n");
      out.write("                    color: '#808080'\r\n");
      out.write("                }]\r\n");
      out.write("            },\r\n");
      out.write("            tooltip: {\r\n");
      out.write("                valueSuffix: '°C'\r\n");
      out.write("            },\r\n");
      out.write("            legend: {\r\n");
      out.write("                layout: 'vertical',\r\n");
      out.write("                align: 'right',\r\n");
      out.write("                verticalAlign: 'middle',\r\n");
      out.write("                borderWidth: 0\r\n");
      out.write("            },\r\n");
      out.write("            series: series\r\n");
      out.write("        });\r\n");
      out.write("    \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<br>\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("<div style=\"text-align:center\">\r\n");
      out.write("<h2>\r\n");
      out.write("Charts<br> <br>\r\n");
      out.write("</h2>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"container\" style=\"height: 400px; width: 600px; margin: 0 auto\"></div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"container1\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\t\r\n");
      out.write("\t\t<div id=\"container2\" style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
